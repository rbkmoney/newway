/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.records;


import com.rbkmoney.newway.domain.enums.WithdrawalStatus;
import com.rbkmoney.newway.domain.enums.WithdrawalTransferStatus;
import com.rbkmoney.newway.domain.tables.Withdrawal;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WithdrawalRecord extends UpdatableRecordImpl<WithdrawalRecord> implements Record14<Long, Long, LocalDateTime, LocalDateTime, Integer, String, String, String, Long, String, WithdrawalStatus, WithdrawalTransferStatus, LocalDateTime, Boolean> {

    private static final long serialVersionUID = -156869004;

    /**
     * Setter for <code>nw.withdrawal.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>nw.withdrawal.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>nw.withdrawal.event_id</code>.
     */
    public void setEventId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>nw.withdrawal.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>nw.withdrawal.event_created_at</code>.
     */
    public void setEventCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>nw.withdrawal.event_created_at</code>.
     */
    public LocalDateTime getEventCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>nw.withdrawal.event_occured_at</code>.
     */
    public void setEventOccuredAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>nw.withdrawal.event_occured_at</code>.
     */
    public LocalDateTime getEventOccuredAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>nw.withdrawal.sequence_id</code>.
     */
    public void setSequenceId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>nw.withdrawal.sequence_id</code>.
     */
    public Integer getSequenceId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>nw.withdrawal.withdrawal_id</code>.
     */
    public void setWithdrawalId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>nw.withdrawal.withdrawal_id</code>.
     */
    public String getWithdrawalId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nw.withdrawal.source_id</code>.
     */
    public void setSourceId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>nw.withdrawal.source_id</code>.
     */
    public String getSourceId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>nw.withdrawal.destination_id</code>.
     */
    public void setDestinationId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>nw.withdrawal.destination_id</code>.
     */
    public String getDestinationId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>nw.withdrawal.amount</code>.
     */
    public void setAmount(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>nw.withdrawal.amount</code>.
     */
    public Long getAmount() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>nw.withdrawal.currency_code</code>.
     */
    public void setCurrencyCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>nw.withdrawal.currency_code</code>.
     */
    public String getCurrencyCode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>nw.withdrawal.withdrawal_status</code>.
     */
    public void setWithdrawalStatus(WithdrawalStatus value) {
        set(10, value);
    }

    /**
     * Getter for <code>nw.withdrawal.withdrawal_status</code>.
     */
    public WithdrawalStatus getWithdrawalStatus() {
        return (WithdrawalStatus) get(10);
    }

    /**
     * Setter for <code>nw.withdrawal.withdrawal_transfer_status</code>.
     */
    public void setWithdrawalTransferStatus(WithdrawalTransferStatus value) {
        set(11, value);
    }

    /**
     * Getter for <code>nw.withdrawal.withdrawal_transfer_status</code>.
     */
    public WithdrawalTransferStatus getWithdrawalTransferStatus() {
        return (WithdrawalTransferStatus) get(11);
    }

    /**
     * Setter for <code>nw.withdrawal.wtime</code>.
     */
    public void setWtime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>nw.withdrawal.wtime</code>.
     */
    public LocalDateTime getWtime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>nw.withdrawal.current</code>.
     */
    public void setCurrent(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>nw.withdrawal.current</code>.
     */
    public Boolean getCurrent() {
        return (Boolean) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, Long, LocalDateTime, LocalDateTime, Integer, String, String, String, Long, String, WithdrawalStatus, WithdrawalTransferStatus, LocalDateTime, Boolean> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, Long, LocalDateTime, LocalDateTime, Integer, String, String, String, Long, String, WithdrawalStatus, WithdrawalTransferStatus, LocalDateTime, Boolean> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Withdrawal.WITHDRAWAL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Withdrawal.WITHDRAWAL.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Withdrawal.WITHDRAWAL.EVENT_CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Withdrawal.WITHDRAWAL.EVENT_OCCURED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Withdrawal.WITHDRAWAL.SEQUENCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Withdrawal.WITHDRAWAL.WITHDRAWAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Withdrawal.WITHDRAWAL.SOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Withdrawal.WITHDRAWAL.DESTINATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return Withdrawal.WITHDRAWAL.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Withdrawal.WITHDRAWAL.CURRENCY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<WithdrawalStatus> field11() {
        return Withdrawal.WITHDRAWAL.WITHDRAWAL_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<WithdrawalTransferStatus> field12() {
        return Withdrawal.WITHDRAWAL.WITHDRAWAL_TRANSFER_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return Withdrawal.WITHDRAWAL.WTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field14() {
        return Withdrawal.WITHDRAWAL.CURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getEventCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getEventOccuredAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSequenceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getWithdrawalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDestinationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getCurrencyCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalStatus value11() {
        return getWithdrawalStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalTransferStatus value12() {
        return getWithdrawalTransferStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getWtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value14() {
        return getCurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value2(Long value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value3(LocalDateTime value) {
        setEventCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value4(LocalDateTime value) {
        setEventOccuredAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value5(Integer value) {
        setSequenceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value6(String value) {
        setWithdrawalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value7(String value) {
        setSourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value8(String value) {
        setDestinationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value9(Long value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value10(String value) {
        setCurrencyCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value11(WithdrawalStatus value) {
        setWithdrawalStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value12(WithdrawalTransferStatus value) {
        setWithdrawalTransferStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value13(LocalDateTime value) {
        setWtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord value14(Boolean value) {
        setCurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithdrawalRecord values(Long value1, Long value2, LocalDateTime value3, LocalDateTime value4, Integer value5, String value6, String value7, String value8, Long value9, String value10, WithdrawalStatus value11, WithdrawalTransferStatus value12, LocalDateTime value13, Boolean value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WithdrawalRecord
     */
    public WithdrawalRecord() {
        super(Withdrawal.WITHDRAWAL);
    }

    /**
     * Create a detached, initialised WithdrawalRecord
     */
    public WithdrawalRecord(Long id, Long eventId, LocalDateTime eventCreatedAt, LocalDateTime eventOccuredAt, Integer sequenceId, String withdrawalId, String sourceId, String destinationId, Long amount, String currencyCode, WithdrawalStatus withdrawalStatus, WithdrawalTransferStatus withdrawalTransferStatus, LocalDateTime wtime, Boolean current) {
        super(Withdrawal.WITHDRAWAL);

        set(0, id);
        set(1, eventId);
        set(2, eventCreatedAt);
        set(3, eventOccuredAt);
        set(4, sequenceId);
        set(5, withdrawalId);
        set(6, sourceId);
        set(7, destinationId);
        set(8, amount);
        set(9, currencyCode);
        set(10, withdrawalStatus);
        set(11, withdrawalTransferStatus);
        set(12, wtime);
        set(13, current);
    }
}
