/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables;


import com.rbkmoney.newway.domain.Keys;
import com.rbkmoney.newway.domain.Nw;
import com.rbkmoney.newway.domain.enums.WithdrawalStatus;
import com.rbkmoney.newway.domain.enums.WithdrawalTransferStatus;
import com.rbkmoney.newway.domain.tables.records.WithdrawalRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Withdrawal extends TableImpl<WithdrawalRecord> {

    private static final long serialVersionUID = 173695961;

    /**
     * The reference instance of <code>nw.withdrawal</code>
     */
    public static final Withdrawal WITHDRAWAL = new Withdrawal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WithdrawalRecord> getRecordType() {
        return WithdrawalRecord.class;
    }

    /**
     * The column <code>nw.withdrawal.id</code>.
     */
    public final TableField<WithdrawalRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nw.withdrawal_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>nw.withdrawal.event_id</code>.
     */
    public final TableField<WithdrawalRecord, Long> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.event_created_at</code>.
     */
    public final TableField<WithdrawalRecord, LocalDateTime> EVENT_CREATED_AT = createField("event_created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.event_occured_at</code>.
     */
    public final TableField<WithdrawalRecord, LocalDateTime> EVENT_OCCURED_AT = createField("event_occured_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.sequence_id</code>.
     */
    public final TableField<WithdrawalRecord, Integer> SEQUENCE_ID = createField("sequence_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.wallet_id</code>.
     */
    public final TableField<WithdrawalRecord, String> WALLET_ID = createField("wallet_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.destination_id</code>.
     */
    public final TableField<WithdrawalRecord, String> DESTINATION_ID = createField("destination_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.withdrawal_id</code>.
     */
    public final TableField<WithdrawalRecord, String> WITHDRAWAL_ID = createField("withdrawal_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.provider_id</code>.
     */
    public final TableField<WithdrawalRecord, String> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.withdrawal.amount</code>.
     */
    public final TableField<WithdrawalRecord, Long> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.currency_code</code>.
     */
    public final TableField<WithdrawalRecord, String> CURRENCY_CODE = createField("currency_code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.withdrawal.withdrawal_status</code>.
     */
    public final TableField<WithdrawalRecord, WithdrawalStatus> WITHDRAWAL_STATUS = createField("withdrawal_status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.rbkmoney.newway.domain.enums.WithdrawalStatus.class), this, "");

    /**
     * The column <code>nw.withdrawal.withdrawal_transfer_status</code>.
     */
    public final TableField<WithdrawalRecord, WithdrawalTransferStatus> WITHDRAWAL_TRANSFER_STATUS = createField("withdrawal_transfer_status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.rbkmoney.newway.domain.enums.WithdrawalTransferStatus.class), this, "");

    /**
     * The column <code>nw.withdrawal.wtime</code>.
     */
    public final TableField<WithdrawalRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("timezone('utc'::text, now())", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>nw.withdrawal.current</code>.
     */
    public final TableField<WithdrawalRecord, Boolean> CURRENT = createField("current", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>nw.withdrawal.fee</code>.
     */
    public final TableField<WithdrawalRecord, Long> FEE = createField("fee", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>nw.withdrawal.provider_fee</code>.
     */
    public final TableField<WithdrawalRecord, Long> PROVIDER_FEE = createField("provider_fee", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>nw.withdrawal</code> table reference
     */
    public Withdrawal() {
        this("withdrawal", null);
    }

    /**
     * Create an aliased <code>nw.withdrawal</code> table reference
     */
    public Withdrawal(String alias) {
        this(alias, WITHDRAWAL);
    }

    private Withdrawal(String alias, Table<WithdrawalRecord> aliased) {
        this(alias, aliased, null);
    }

    private Withdrawal(String alias, Table<WithdrawalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nw.NW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WithdrawalRecord, Long> getIdentity() {
        return Keys.IDENTITY_WITHDRAWAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WithdrawalRecord> getPrimaryKey() {
        return Keys.WITHDRAWAL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WithdrawalRecord>> getKeys() {
        return Arrays.<UniqueKey<WithdrawalRecord>>asList(Keys.WITHDRAWAL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Withdrawal as(String alias) {
        return new Withdrawal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Withdrawal rename(String name) {
        return new Withdrawal(name, null);
    }
}
