/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.pojos;


import com.rbkmoney.newway.domain.enums.CashFlowAccount;
import com.rbkmoney.newway.domain.enums.FistfulCashFlowChangeType;

import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FistfulCashFlow implements Serializable {

    private static final long serialVersionUID = -40534755;

    private Long                      id;
    private Long                      objId;
    private CashFlowAccount           sourceAccountType;
    private String                    sourceAccountTypeValue;
    private String                    sourceAccountId;
    private CashFlowAccount           destinationAccountType;
    private String                    destinationAccountTypeValue;
    private String                    destinationAccountId;
    private Long                      amount;
    private String                    currencyCode;
    private String                    details;
    private FistfulCashFlowChangeType objType;

    public FistfulCashFlow() {}

    public FistfulCashFlow(FistfulCashFlow value) {
        this.id = value.id;
        this.objId = value.objId;
        this.sourceAccountType = value.sourceAccountType;
        this.sourceAccountTypeValue = value.sourceAccountTypeValue;
        this.sourceAccountId = value.sourceAccountId;
        this.destinationAccountType = value.destinationAccountType;
        this.destinationAccountTypeValue = value.destinationAccountTypeValue;
        this.destinationAccountId = value.destinationAccountId;
        this.amount = value.amount;
        this.currencyCode = value.currencyCode;
        this.details = value.details;
        this.objType = value.objType;
    }

    public FistfulCashFlow(
        Long                      id,
        Long                      objId,
        CashFlowAccount           sourceAccountType,
        String                    sourceAccountTypeValue,
        String                    sourceAccountId,
        CashFlowAccount           destinationAccountType,
        String                    destinationAccountTypeValue,
        String                    destinationAccountId,
        Long                      amount,
        String                    currencyCode,
        String                    details,
        FistfulCashFlowChangeType objType
    ) {
        this.id = id;
        this.objId = objId;
        this.sourceAccountType = sourceAccountType;
        this.sourceAccountTypeValue = sourceAccountTypeValue;
        this.sourceAccountId = sourceAccountId;
        this.destinationAccountType = destinationAccountType;
        this.destinationAccountTypeValue = destinationAccountTypeValue;
        this.destinationAccountId = destinationAccountId;
        this.amount = amount;
        this.currencyCode = currencyCode;
        this.details = details;
        this.objType = objType;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getObjId() {
        return this.objId;
    }

    public void setObjId(Long objId) {
        this.objId = objId;
    }

    public CashFlowAccount getSourceAccountType() {
        return this.sourceAccountType;
    }

    public void setSourceAccountType(CashFlowAccount sourceAccountType) {
        this.sourceAccountType = sourceAccountType;
    }

    public String getSourceAccountTypeValue() {
        return this.sourceAccountTypeValue;
    }

    public void setSourceAccountTypeValue(String sourceAccountTypeValue) {
        this.sourceAccountTypeValue = sourceAccountTypeValue;
    }

    public String getSourceAccountId() {
        return this.sourceAccountId;
    }

    public void setSourceAccountId(String sourceAccountId) {
        this.sourceAccountId = sourceAccountId;
    }

    public CashFlowAccount getDestinationAccountType() {
        return this.destinationAccountType;
    }

    public void setDestinationAccountType(CashFlowAccount destinationAccountType) {
        this.destinationAccountType = destinationAccountType;
    }

    public String getDestinationAccountTypeValue() {
        return this.destinationAccountTypeValue;
    }

    public void setDestinationAccountTypeValue(String destinationAccountTypeValue) {
        this.destinationAccountTypeValue = destinationAccountTypeValue;
    }

    public String getDestinationAccountId() {
        return this.destinationAccountId;
    }

    public void setDestinationAccountId(String destinationAccountId) {
        this.destinationAccountId = destinationAccountId;
    }

    public Long getAmount() {
        return this.amount;
    }

    public void setAmount(Long amount) {
        this.amount = amount;
    }

    public String getCurrencyCode() {
        return this.currencyCode;
    }

    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    public String getDetails() {
        return this.details;
    }

    public void setDetails(String details) {
        this.details = details;
    }

    public FistfulCashFlowChangeType getObjType() {
        return this.objType;
    }

    public void setObjType(FistfulCashFlowChangeType objType) {
        this.objType = objType;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FistfulCashFlow other = (FistfulCashFlow) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (objId == null) {
            if (other.objId != null)
                return false;
        }
        else if (!objId.equals(other.objId))
            return false;
        if (sourceAccountType == null) {
            if (other.sourceAccountType != null)
                return false;
        }
        else if (!sourceAccountType.equals(other.sourceAccountType))
            return false;
        if (sourceAccountTypeValue == null) {
            if (other.sourceAccountTypeValue != null)
                return false;
        }
        else if (!sourceAccountTypeValue.equals(other.sourceAccountTypeValue))
            return false;
        if (sourceAccountId == null) {
            if (other.sourceAccountId != null)
                return false;
        }
        else if (!sourceAccountId.equals(other.sourceAccountId))
            return false;
        if (destinationAccountType == null) {
            if (other.destinationAccountType != null)
                return false;
        }
        else if (!destinationAccountType.equals(other.destinationAccountType))
            return false;
        if (destinationAccountTypeValue == null) {
            if (other.destinationAccountTypeValue != null)
                return false;
        }
        else if (!destinationAccountTypeValue.equals(other.destinationAccountTypeValue))
            return false;
        if (destinationAccountId == null) {
            if (other.destinationAccountId != null)
                return false;
        }
        else if (!destinationAccountId.equals(other.destinationAccountId))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (currencyCode == null) {
            if (other.currencyCode != null)
                return false;
        }
        else if (!currencyCode.equals(other.currencyCode))
            return false;
        if (details == null) {
            if (other.details != null)
                return false;
        }
        else if (!details.equals(other.details))
            return false;
        if (objType == null) {
            if (other.objType != null)
                return false;
        }
        else if (!objType.equals(other.objType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.objId == null) ? 0 : this.objId.hashCode());
        result = prime * result + ((this.sourceAccountType == null) ? 0 : this.sourceAccountType.hashCode());
        result = prime * result + ((this.sourceAccountTypeValue == null) ? 0 : this.sourceAccountTypeValue.hashCode());
        result = prime * result + ((this.sourceAccountId == null) ? 0 : this.sourceAccountId.hashCode());
        result = prime * result + ((this.destinationAccountType == null) ? 0 : this.destinationAccountType.hashCode());
        result = prime * result + ((this.destinationAccountTypeValue == null) ? 0 : this.destinationAccountTypeValue.hashCode());
        result = prime * result + ((this.destinationAccountId == null) ? 0 : this.destinationAccountId.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.currencyCode == null) ? 0 : this.currencyCode.hashCode());
        result = prime * result + ((this.details == null) ? 0 : this.details.hashCode());
        result = prime * result + ((this.objType == null) ? 0 : this.objType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FistfulCashFlow (");

        sb.append(id);
        sb.append(", ").append(objId);
        sb.append(", ").append(sourceAccountType);
        sb.append(", ").append(sourceAccountTypeValue);
        sb.append(", ").append(sourceAccountId);
        sb.append(", ").append(destinationAccountType);
        sb.append(", ").append(destinationAccountTypeValue);
        sb.append(", ").append(destinationAccountId);
        sb.append(", ").append(amount);
        sb.append(", ").append(currencyCode);
        sb.append(", ").append(details);
        sb.append(", ").append(objType);

        sb.append(")");
        return sb.toString();
    }
}
