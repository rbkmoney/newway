/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.records;


import com.rbkmoney.newway.domain.tables.Rate;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RateRecord extends UpdatableRecordImpl<RateRecord> implements Record14<Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime, String, Short, String, Short, Long, Long, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1503426818;

    /**
     * Setter for <code>nw.rate.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>nw.rate.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>nw.rate.event_id</code>.
     */
    public void setEventId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>nw.rate.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>nw.rate.event_created_at</code>.
     */
    public void setEventCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>nw.rate.event_created_at</code>.
     */
    public LocalDateTime getEventCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>nw.rate.source_id</code>.
     */
    public void setSourceId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>nw.rate.source_id</code>.
     */
    public String getSourceId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>nw.rate.lower_bound_inclusive</code>.
     */
    public void setLowerBoundInclusive(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>nw.rate.lower_bound_inclusive</code>.
     */
    public LocalDateTime getLowerBoundInclusive() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>nw.rate.upper_bound_exclusive</code>.
     */
    public void setUpperBoundExclusive(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>nw.rate.upper_bound_exclusive</code>.
     */
    public LocalDateTime getUpperBoundExclusive() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>nw.rate.source_symbolic_code</code>.
     */
    public void setSourceSymbolicCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>nw.rate.source_symbolic_code</code>.
     */
    public String getSourceSymbolicCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>nw.rate.source_exponent</code>.
     */
    public void setSourceExponent(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>nw.rate.source_exponent</code>.
     */
    public Short getSourceExponent() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>nw.rate.destination_symbolic_code</code>.
     */
    public void setDestinationSymbolicCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>nw.rate.destination_symbolic_code</code>.
     */
    public String getDestinationSymbolicCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>nw.rate.destination_exponent</code>.
     */
    public void setDestinationExponent(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>nw.rate.destination_exponent</code>.
     */
    public Short getDestinationExponent() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>nw.rate.exchange_rate_rational_p</code>.
     */
    public void setExchangeRateRationalP(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>nw.rate.exchange_rate_rational_p</code>.
     */
    public Long getExchangeRateRationalP() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>nw.rate.exchange_rate_rational_q</code>.
     */
    public void setExchangeRateRationalQ(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>nw.rate.exchange_rate_rational_q</code>.
     */
    public Long getExchangeRateRationalQ() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>nw.rate.wtime</code>.
     */
    public void setWtime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>nw.rate.wtime</code>.
     */
    public LocalDateTime getWtime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>nw.rate.current</code>.
     */
    public void setCurrent(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>nw.rate.current</code>.
     */
    public Boolean getCurrent() {
        return (Boolean) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime, String, Short, String, Short, Long, Long, LocalDateTime, Boolean> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime, String, Short, String, Short, Long, Long, LocalDateTime, Boolean> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Rate.RATE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Rate.RATE.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Rate.RATE.EVENT_CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Rate.RATE.SOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return Rate.RATE.LOWER_BOUND_INCLUSIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return Rate.RATE.UPPER_BOUND_EXCLUSIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Rate.RATE.SOURCE_SYMBOLIC_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Rate.RATE.SOURCE_EXPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Rate.RATE.DESTINATION_SYMBOLIC_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return Rate.RATE.DESTINATION_EXPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return Rate.RATE.EXCHANGE_RATE_RATIONAL_P;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return Rate.RATE.EXCHANGE_RATE_RATIONAL_Q;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return Rate.RATE.WTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field14() {
        return Rate.RATE.CURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getEventCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getLowerBoundInclusive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getUpperBoundExclusive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSourceSymbolicCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getSourceExponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDestinationSymbolicCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getDestinationExponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getExchangeRateRationalP();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getExchangeRateRationalQ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getWtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value14() {
        return getCurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value2(Long value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value3(LocalDateTime value) {
        setEventCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value4(String value) {
        setSourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value5(LocalDateTime value) {
        setLowerBoundInclusive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value6(LocalDateTime value) {
        setUpperBoundExclusive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value7(String value) {
        setSourceSymbolicCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value8(Short value) {
        setSourceExponent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value9(String value) {
        setDestinationSymbolicCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value10(Short value) {
        setDestinationExponent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value11(Long value) {
        setExchangeRateRationalP(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value12(Long value) {
        setExchangeRateRationalQ(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value13(LocalDateTime value) {
        setWtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord value14(Boolean value) {
        setCurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RateRecord values(Long value1, Long value2, LocalDateTime value3, String value4, LocalDateTime value5, LocalDateTime value6, String value7, Short value8, String value9, Short value10, Long value11, Long value12, LocalDateTime value13, Boolean value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RateRecord
     */
    public RateRecord() {
        super(Rate.RATE);
    }

    /**
     * Create a detached, initialised RateRecord
     */
    public RateRecord(Long id, Long eventId, LocalDateTime eventCreatedAt, String sourceId, LocalDateTime lowerBoundInclusive, LocalDateTime upperBoundExclusive, String sourceSymbolicCode, Short sourceExponent, String destinationSymbolicCode, Short destinationExponent, Long exchangeRateRationalP, Long exchangeRateRationalQ, LocalDateTime wtime, Boolean current) {
        super(Rate.RATE);

        set(0, id);
        set(1, eventId);
        set(2, eventCreatedAt);
        set(3, sourceId);
        set(4, lowerBoundInclusive);
        set(5, upperBoundExclusive);
        set(6, sourceSymbolicCode);
        set(7, sourceExponent);
        set(8, destinationSymbolicCode);
        set(9, destinationExponent);
        set(10, exchangeRateRationalP);
        set(11, exchangeRateRationalQ);
        set(12, wtime);
        set(13, current);
    }
}
