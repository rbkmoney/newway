/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.pojos;


import com.rbkmoney.newway.domain.enums.WithdrawalStatus;
import com.rbkmoney.newway.domain.enums.WithdrawalTransferStatus;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Withdrawal implements Serializable {

    private static final long serialVersionUID = 66125705;

    private Long                     id;
    private Long                     eventId;
    private LocalDateTime            eventCreatedAt;
    private LocalDateTime            eventOccuredAt;
    private Integer                  sequenceId;
    private String                   walletId;
    private String                   destinationId;
    private String                   withdrawalId;
    private String                   providerId;
    private Long                     amount;
    private String                   currencyCode;
    private WithdrawalStatus         withdrawalStatus;
    private WithdrawalTransferStatus withdrawalTransferStatus;
    private LocalDateTime            wtime;
    private Boolean                  current;
    private Long                     fee;
    private Long                     providerFee;

    public Withdrawal() {}

    public Withdrawal(Withdrawal value) {
        this.id = value.id;
        this.eventId = value.eventId;
        this.eventCreatedAt = value.eventCreatedAt;
        this.eventOccuredAt = value.eventOccuredAt;
        this.sequenceId = value.sequenceId;
        this.walletId = value.walletId;
        this.destinationId = value.destinationId;
        this.withdrawalId = value.withdrawalId;
        this.providerId = value.providerId;
        this.amount = value.amount;
        this.currencyCode = value.currencyCode;
        this.withdrawalStatus = value.withdrawalStatus;
        this.withdrawalTransferStatus = value.withdrawalTransferStatus;
        this.wtime = value.wtime;
        this.current = value.current;
        this.fee = value.fee;
        this.providerFee = value.providerFee;
    }

    public Withdrawal(
        Long                     id,
        Long                     eventId,
        LocalDateTime            eventCreatedAt,
        LocalDateTime            eventOccuredAt,
        Integer                  sequenceId,
        String                   walletId,
        String                   destinationId,
        String                   withdrawalId,
        String                   providerId,
        Long                     amount,
        String                   currencyCode,
        WithdrawalStatus         withdrawalStatus,
        WithdrawalTransferStatus withdrawalTransferStatus,
        LocalDateTime            wtime,
        Boolean                  current,
        Long                     fee,
        Long                     providerFee
    ) {
        this.id = id;
        this.eventId = eventId;
        this.eventCreatedAt = eventCreatedAt;
        this.eventOccuredAt = eventOccuredAt;
        this.sequenceId = sequenceId;
        this.walletId = walletId;
        this.destinationId = destinationId;
        this.withdrawalId = withdrawalId;
        this.providerId = providerId;
        this.amount = amount;
        this.currencyCode = currencyCode;
        this.withdrawalStatus = withdrawalStatus;
        this.withdrawalTransferStatus = withdrawalTransferStatus;
        this.wtime = wtime;
        this.current = current;
        this.fee = fee;
        this.providerFee = providerFee;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getEventId() {
        return this.eventId;
    }

    public void setEventId(Long eventId) {
        this.eventId = eventId;
    }

    public LocalDateTime getEventCreatedAt() {
        return this.eventCreatedAt;
    }

    public void setEventCreatedAt(LocalDateTime eventCreatedAt) {
        this.eventCreatedAt = eventCreatedAt;
    }

    public LocalDateTime getEventOccuredAt() {
        return this.eventOccuredAt;
    }

    public void setEventOccuredAt(LocalDateTime eventOccuredAt) {
        this.eventOccuredAt = eventOccuredAt;
    }

    public Integer getSequenceId() {
        return this.sequenceId;
    }

    public void setSequenceId(Integer sequenceId) {
        this.sequenceId = sequenceId;
    }

    public String getWalletId() {
        return this.walletId;
    }

    public void setWalletId(String walletId) {
        this.walletId = walletId;
    }

    public String getDestinationId() {
        return this.destinationId;
    }

    public void setDestinationId(String destinationId) {
        this.destinationId = destinationId;
    }

    public String getWithdrawalId() {
        return this.withdrawalId;
    }

    public void setWithdrawalId(String withdrawalId) {
        this.withdrawalId = withdrawalId;
    }

    public String getProviderId() {
        return this.providerId;
    }

    public void setProviderId(String providerId) {
        this.providerId = providerId;
    }

    public Long getAmount() {
        return this.amount;
    }

    public void setAmount(Long amount) {
        this.amount = amount;
    }

    public String getCurrencyCode() {
        return this.currencyCode;
    }

    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    public WithdrawalStatus getWithdrawalStatus() {
        return this.withdrawalStatus;
    }

    public void setWithdrawalStatus(WithdrawalStatus withdrawalStatus) {
        this.withdrawalStatus = withdrawalStatus;
    }

    public WithdrawalTransferStatus getWithdrawalTransferStatus() {
        return this.withdrawalTransferStatus;
    }

    public void setWithdrawalTransferStatus(WithdrawalTransferStatus withdrawalTransferStatus) {
        this.withdrawalTransferStatus = withdrawalTransferStatus;
    }

    public LocalDateTime getWtime() {
        return this.wtime;
    }

    public void setWtime(LocalDateTime wtime) {
        this.wtime = wtime;
    }

    public Boolean getCurrent() {
        return this.current;
    }

    public void setCurrent(Boolean current) {
        this.current = current;
    }

    public Long getFee() {
        return this.fee;
    }

    public void setFee(Long fee) {
        this.fee = fee;
    }

    public Long getProviderFee() {
        return this.providerFee;
    }

    public void setProviderFee(Long providerFee) {
        this.providerFee = providerFee;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Withdrawal other = (Withdrawal) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!eventId.equals(other.eventId))
            return false;
        if (eventCreatedAt == null) {
            if (other.eventCreatedAt != null)
                return false;
        }
        else if (!eventCreatedAt.equals(other.eventCreatedAt))
            return false;
        if (eventOccuredAt == null) {
            if (other.eventOccuredAt != null)
                return false;
        }
        else if (!eventOccuredAt.equals(other.eventOccuredAt))
            return false;
        if (sequenceId == null) {
            if (other.sequenceId != null)
                return false;
        }
        else if (!sequenceId.equals(other.sequenceId))
            return false;
        if (walletId == null) {
            if (other.walletId != null)
                return false;
        }
        else if (!walletId.equals(other.walletId))
            return false;
        if (destinationId == null) {
            if (other.destinationId != null)
                return false;
        }
        else if (!destinationId.equals(other.destinationId))
            return false;
        if (withdrawalId == null) {
            if (other.withdrawalId != null)
                return false;
        }
        else if (!withdrawalId.equals(other.withdrawalId))
            return false;
        if (providerId == null) {
            if (other.providerId != null)
                return false;
        }
        else if (!providerId.equals(other.providerId))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (currencyCode == null) {
            if (other.currencyCode != null)
                return false;
        }
        else if (!currencyCode.equals(other.currencyCode))
            return false;
        if (withdrawalStatus == null) {
            if (other.withdrawalStatus != null)
                return false;
        }
        else if (!withdrawalStatus.equals(other.withdrawalStatus))
            return false;
        if (withdrawalTransferStatus == null) {
            if (other.withdrawalTransferStatus != null)
                return false;
        }
        else if (!withdrawalTransferStatus.equals(other.withdrawalTransferStatus))
            return false;
        if (wtime == null) {
            if (other.wtime != null)
                return false;
        }
        else if (!wtime.equals(other.wtime))
            return false;
        if (current == null) {
            if (other.current != null)
                return false;
        }
        else if (!current.equals(other.current))
            return false;
        if (fee == null) {
            if (other.fee != null)
                return false;
        }
        else if (!fee.equals(other.fee))
            return false;
        if (providerFee == null) {
            if (other.providerFee != null)
                return false;
        }
        else if (!providerFee.equals(other.providerFee))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.eventId == null) ? 0 : this.eventId.hashCode());
        result = prime * result + ((this.eventCreatedAt == null) ? 0 : this.eventCreatedAt.hashCode());
        result = prime * result + ((this.eventOccuredAt == null) ? 0 : this.eventOccuredAt.hashCode());
        result = prime * result + ((this.sequenceId == null) ? 0 : this.sequenceId.hashCode());
        result = prime * result + ((this.walletId == null) ? 0 : this.walletId.hashCode());
        result = prime * result + ((this.destinationId == null) ? 0 : this.destinationId.hashCode());
        result = prime * result + ((this.withdrawalId == null) ? 0 : this.withdrawalId.hashCode());
        result = prime * result + ((this.providerId == null) ? 0 : this.providerId.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.currencyCode == null) ? 0 : this.currencyCode.hashCode());
        result = prime * result + ((this.withdrawalStatus == null) ? 0 : this.withdrawalStatus.hashCode());
        result = prime * result + ((this.withdrawalTransferStatus == null) ? 0 : this.withdrawalTransferStatus.hashCode());
        result = prime * result + ((this.wtime == null) ? 0 : this.wtime.hashCode());
        result = prime * result + ((this.current == null) ? 0 : this.current.hashCode());
        result = prime * result + ((this.fee == null) ? 0 : this.fee.hashCode());
        result = prime * result + ((this.providerFee == null) ? 0 : this.providerFee.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Withdrawal (");

        sb.append(id);
        sb.append(", ").append(eventId);
        sb.append(", ").append(eventCreatedAt);
        sb.append(", ").append(eventOccuredAt);
        sb.append(", ").append(sequenceId);
        sb.append(", ").append(walletId);
        sb.append(", ").append(destinationId);
        sb.append(", ").append(withdrawalId);
        sb.append(", ").append(providerId);
        sb.append(", ").append(amount);
        sb.append(", ").append(currencyCode);
        sb.append(", ").append(withdrawalStatus);
        sb.append(", ").append(withdrawalTransferStatus);
        sb.append(", ").append(wtime);
        sb.append(", ").append(current);
        sb.append(", ").append(fee);
        sb.append(", ").append(providerFee);

        sb.append(")");
        return sb.toString();
    }
}
