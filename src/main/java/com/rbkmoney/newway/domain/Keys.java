/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain;


import com.rbkmoney.newway.domain.tables.Adjustment;
import com.rbkmoney.newway.domain.tables.CashFlow;
import com.rbkmoney.newway.domain.tables.Category;
import com.rbkmoney.newway.domain.tables.Contract;
import com.rbkmoney.newway.domain.tables.ContractAdjustment;
import com.rbkmoney.newway.domain.tables.Contractor;
import com.rbkmoney.newway.domain.tables.Invoice;
import com.rbkmoney.newway.domain.tables.InvoiceCart;
import com.rbkmoney.newway.domain.tables.Party;
import com.rbkmoney.newway.domain.tables.Payment;
import com.rbkmoney.newway.domain.tables.Payout;
import com.rbkmoney.newway.domain.tables.PayoutSummary;
import com.rbkmoney.newway.domain.tables.PayoutTool;
import com.rbkmoney.newway.domain.tables.Refund;
import com.rbkmoney.newway.domain.tables.Shop;
import com.rbkmoney.newway.domain.tables.records.AdjustmentRecord;
import com.rbkmoney.newway.domain.tables.records.CashFlowRecord;
import com.rbkmoney.newway.domain.tables.records.CategoryRecord;
import com.rbkmoney.newway.domain.tables.records.ContractAdjustmentRecord;
import com.rbkmoney.newway.domain.tables.records.ContractRecord;
import com.rbkmoney.newway.domain.tables.records.ContractorRecord;
import com.rbkmoney.newway.domain.tables.records.InvoiceCartRecord;
import com.rbkmoney.newway.domain.tables.records.InvoiceRecord;
import com.rbkmoney.newway.domain.tables.records.PartyRecord;
import com.rbkmoney.newway.domain.tables.records.PaymentRecord;
import com.rbkmoney.newway.domain.tables.records.PayoutRecord;
import com.rbkmoney.newway.domain.tables.records.PayoutSummaryRecord;
import com.rbkmoney.newway.domain.tables.records.PayoutToolRecord;
import com.rbkmoney.newway.domain.tables.records.RefundRecord;
import com.rbkmoney.newway.domain.tables.records.ShopRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>nw</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AdjustmentRecord, Long> IDENTITY_ADJUSTMENT = Identities0.IDENTITY_ADJUSTMENT;
    public static final Identity<CashFlowRecord, Long> IDENTITY_CASH_FLOW = Identities0.IDENTITY_CASH_FLOW;
    public static final Identity<CategoryRecord, Long> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<ContractRecord, Long> IDENTITY_CONTRACT = Identities0.IDENTITY_CONTRACT;
    public static final Identity<ContractAdjustmentRecord, Long> IDENTITY_CONTRACT_ADJUSTMENT = Identities0.IDENTITY_CONTRACT_ADJUSTMENT;
    public static final Identity<ContractorRecord, Long> IDENTITY_CONTRACTOR = Identities0.IDENTITY_CONTRACTOR;
    public static final Identity<InvoiceRecord, Long> IDENTITY_INVOICE = Identities0.IDENTITY_INVOICE;
    public static final Identity<InvoiceCartRecord, Long> IDENTITY_INVOICE_CART = Identities0.IDENTITY_INVOICE_CART;
    public static final Identity<PartyRecord, Long> IDENTITY_PARTY = Identities0.IDENTITY_PARTY;
    public static final Identity<PaymentRecord, Long> IDENTITY_PAYMENT = Identities0.IDENTITY_PAYMENT;
    public static final Identity<PayoutRecord, Long> IDENTITY_PAYOUT = Identities0.IDENTITY_PAYOUT;
    public static final Identity<PayoutSummaryRecord, Long> IDENTITY_PAYOUT_SUMMARY = Identities0.IDENTITY_PAYOUT_SUMMARY;
    public static final Identity<PayoutToolRecord, Long> IDENTITY_PAYOUT_TOOL = Identities0.IDENTITY_PAYOUT_TOOL;
    public static final Identity<RefundRecord, Long> IDENTITY_REFUND = Identities0.IDENTITY_REFUND;
    public static final Identity<ShopRecord, Long> IDENTITY_SHOP = Identities0.IDENTITY_SHOP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdjustmentRecord> ADJUSTMENT_PKEY = UniqueKeys0.ADJUSTMENT_PKEY;
    public static final UniqueKey<CashFlowRecord> CASH_FLOW_PKEY = UniqueKeys0.CASH_FLOW_PKEY;
    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
    public static final UniqueKey<ContractRecord> CONTRACT_PKEY = UniqueKeys0.CONTRACT_PKEY;
    public static final UniqueKey<ContractAdjustmentRecord> CONTRACT_ADJUSTMENT_PKEY = UniqueKeys0.CONTRACT_ADJUSTMENT_PKEY;
    public static final UniqueKey<ContractorRecord> CONTRACTOR_PKEY = UniqueKeys0.CONTRACTOR_PKEY;
    public static final UniqueKey<InvoiceRecord> INVOICE_PKEY = UniqueKeys0.INVOICE_PKEY;
    public static final UniqueKey<InvoiceCartRecord> INVOICE_CART_PKEY = UniqueKeys0.INVOICE_CART_PKEY;
    public static final UniqueKey<PartyRecord> PARTY_PKEY = UniqueKeys0.PARTY_PKEY;
    public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = UniqueKeys0.PAYMENT_PKEY;
    public static final UniqueKey<PayoutRecord> PAYOUT_PKEY = UniqueKeys0.PAYOUT_PKEY;
    public static final UniqueKey<PayoutSummaryRecord> PAYOUT_SUMMARY_PKEY = UniqueKeys0.PAYOUT_SUMMARY_PKEY;
    public static final UniqueKey<PayoutToolRecord> PAYOUT_TOOL_PKEY = UniqueKeys0.PAYOUT_TOOL_PKEY;
    public static final UniqueKey<RefundRecord> REFUND_PKEY = UniqueKeys0.REFUND_PKEY;
    public static final UniqueKey<ShopRecord> SHOP_PKEY = UniqueKeys0.SHOP_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ContractAdjustmentRecord, ContractRecord> CONTRACT_ADJUSTMENT__FK_ADJUSTMENT_TO_CONTRACT = ForeignKeys0.CONTRACT_ADJUSTMENT__FK_ADJUSTMENT_TO_CONTRACT;
    public static final ForeignKey<InvoiceCartRecord, InvoiceRecord> INVOICE_CART__FK_CART_TO_INVOICE = ForeignKeys0.INVOICE_CART__FK_CART_TO_INVOICE;
    public static final ForeignKey<PayoutSummaryRecord, PayoutRecord> PAYOUT_SUMMARY__FK_SUMMARY_TO_PAYOUT = ForeignKeys0.PAYOUT_SUMMARY__FK_SUMMARY_TO_PAYOUT;
    public static final ForeignKey<PayoutToolRecord, ContractRecord> PAYOUT_TOOL__FK_PAYOUT_TOOL_TO_CONTRACT = ForeignKeys0.PAYOUT_TOOL__FK_PAYOUT_TOOL_TO_CONTRACT;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AdjustmentRecord, Long> IDENTITY_ADJUSTMENT = createIdentity(Adjustment.ADJUSTMENT, Adjustment.ADJUSTMENT.ID);
        public static Identity<CashFlowRecord, Long> IDENTITY_CASH_FLOW = createIdentity(CashFlow.CASH_FLOW, CashFlow.CASH_FLOW.ID);
        public static Identity<CategoryRecord, Long> IDENTITY_CATEGORY = createIdentity(Category.CATEGORY, Category.CATEGORY.ID);
        public static Identity<ContractRecord, Long> IDENTITY_CONTRACT = createIdentity(Contract.CONTRACT, Contract.CONTRACT.ID);
        public static Identity<ContractAdjustmentRecord, Long> IDENTITY_CONTRACT_ADJUSTMENT = createIdentity(ContractAdjustment.CONTRACT_ADJUSTMENT, ContractAdjustment.CONTRACT_ADJUSTMENT.ID);
        public static Identity<ContractorRecord, Long> IDENTITY_CONTRACTOR = createIdentity(Contractor.CONTRACTOR, Contractor.CONTRACTOR.ID);
        public static Identity<InvoiceRecord, Long> IDENTITY_INVOICE = createIdentity(Invoice.INVOICE, Invoice.INVOICE.ID);
        public static Identity<InvoiceCartRecord, Long> IDENTITY_INVOICE_CART = createIdentity(InvoiceCart.INVOICE_CART, InvoiceCart.INVOICE_CART.ID);
        public static Identity<PartyRecord, Long> IDENTITY_PARTY = createIdentity(Party.PARTY, Party.PARTY.ID);
        public static Identity<PaymentRecord, Long> IDENTITY_PAYMENT = createIdentity(Payment.PAYMENT, Payment.PAYMENT.ID);
        public static Identity<PayoutRecord, Long> IDENTITY_PAYOUT = createIdentity(Payout.PAYOUT, Payout.PAYOUT.ID);
        public static Identity<PayoutSummaryRecord, Long> IDENTITY_PAYOUT_SUMMARY = createIdentity(PayoutSummary.PAYOUT_SUMMARY, PayoutSummary.PAYOUT_SUMMARY.ID);
        public static Identity<PayoutToolRecord, Long> IDENTITY_PAYOUT_TOOL = createIdentity(PayoutTool.PAYOUT_TOOL, PayoutTool.PAYOUT_TOOL.ID);
        public static Identity<RefundRecord, Long> IDENTITY_REFUND = createIdentity(Refund.REFUND, Refund.REFUND.ID);
        public static Identity<ShopRecord, Long> IDENTITY_SHOP = createIdentity(Shop.SHOP, Shop.SHOP.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AdjustmentRecord> ADJUSTMENT_PKEY = createUniqueKey(Adjustment.ADJUSTMENT, "adjustment_pkey", Adjustment.ADJUSTMENT.ID);
        public static final UniqueKey<CashFlowRecord> CASH_FLOW_PKEY = createUniqueKey(CashFlow.CASH_FLOW, "cash_flow_pkey", CashFlow.CASH_FLOW.ID);
        public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = createUniqueKey(Category.CATEGORY, "category_pkey", Category.CATEGORY.ID);
        public static final UniqueKey<ContractRecord> CONTRACT_PKEY = createUniqueKey(Contract.CONTRACT, "contract_pkey", Contract.CONTRACT.ID);
        public static final UniqueKey<ContractAdjustmentRecord> CONTRACT_ADJUSTMENT_PKEY = createUniqueKey(ContractAdjustment.CONTRACT_ADJUSTMENT, "contract_adjustment_pkey", ContractAdjustment.CONTRACT_ADJUSTMENT.ID);
        public static final UniqueKey<ContractorRecord> CONTRACTOR_PKEY = createUniqueKey(Contractor.CONTRACTOR, "contractor_pkey", Contractor.CONTRACTOR.ID);
        public static final UniqueKey<InvoiceRecord> INVOICE_PKEY = createUniqueKey(Invoice.INVOICE, "invoice_pkey", Invoice.INVOICE.ID);
        public static final UniqueKey<InvoiceCartRecord> INVOICE_CART_PKEY = createUniqueKey(InvoiceCart.INVOICE_CART, "invoice_cart_pkey", InvoiceCart.INVOICE_CART.ID);
        public static final UniqueKey<PartyRecord> PARTY_PKEY = createUniqueKey(Party.PARTY, "party_pkey", Party.PARTY.ID);
        public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = createUniqueKey(Payment.PAYMENT, "payment_pkey", Payment.PAYMENT.ID);
        public static final UniqueKey<PayoutRecord> PAYOUT_PKEY = createUniqueKey(Payout.PAYOUT, "payout_pkey", Payout.PAYOUT.ID);
        public static final UniqueKey<PayoutSummaryRecord> PAYOUT_SUMMARY_PKEY = createUniqueKey(PayoutSummary.PAYOUT_SUMMARY, "payout_summary_pkey", PayoutSummary.PAYOUT_SUMMARY.ID);
        public static final UniqueKey<PayoutToolRecord> PAYOUT_TOOL_PKEY = createUniqueKey(PayoutTool.PAYOUT_TOOL, "payout_tool_pkey", PayoutTool.PAYOUT_TOOL.ID);
        public static final UniqueKey<RefundRecord> REFUND_PKEY = createUniqueKey(Refund.REFUND, "refund_pkey", Refund.REFUND.ID);
        public static final UniqueKey<ShopRecord> SHOP_PKEY = createUniqueKey(Shop.SHOP, "shop_pkey", Shop.SHOP.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<ContractAdjustmentRecord, ContractRecord> CONTRACT_ADJUSTMENT__FK_ADJUSTMENT_TO_CONTRACT = createForeignKey(com.rbkmoney.newway.domain.Keys.CONTRACT_PKEY, ContractAdjustment.CONTRACT_ADJUSTMENT, "contract_adjustment__fk_adjustment_to_contract", ContractAdjustment.CONTRACT_ADJUSTMENT.CNTRCT_ID);
        public static final ForeignKey<InvoiceCartRecord, InvoiceRecord> INVOICE_CART__FK_CART_TO_INVOICE = createForeignKey(com.rbkmoney.newway.domain.Keys.INVOICE_PKEY, InvoiceCart.INVOICE_CART, "invoice_cart__fk_cart_to_invoice", InvoiceCart.INVOICE_CART.INV_ID);
        public static final ForeignKey<PayoutSummaryRecord, PayoutRecord> PAYOUT_SUMMARY__FK_SUMMARY_TO_PAYOUT = createForeignKey(com.rbkmoney.newway.domain.Keys.PAYOUT_PKEY, PayoutSummary.PAYOUT_SUMMARY, "payout_summary__fk_summary_to_payout", PayoutSummary.PAYOUT_SUMMARY.PYT_ID);
        public static final ForeignKey<PayoutToolRecord, ContractRecord> PAYOUT_TOOL__FK_PAYOUT_TOOL_TO_CONTRACT = createForeignKey(com.rbkmoney.newway.domain.Keys.CONTRACT_PKEY, PayoutTool.PAYOUT_TOOL, "payout_tool__fk_payout_tool_to_contract", PayoutTool.PAYOUT_TOOL.CNTRCT_ID);
    }
}
